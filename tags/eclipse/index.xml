<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Eclipse on // Florian Brüssel / fBrx </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>https://fbrx.github.io/tags/eclipse/index.xml/</link>
    <language>en-us</language>
    
    
    <updated>Sun, 22 Dec 2013 16:49:59 &#43;0100</updated>
    
    <item>
      <title>propertySL</title>
      <link>https://fbrx.github.io/project/propertySL/</link>
      <pubDate>Sun, 22 Dec 2013 16:49:59 &#43;0100</pubDate>
      
      <guid>https://fbrx.github.io/project/propertySL/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/fBrx/propertySL&#34;&gt;&lt;img align=&#34;right&#34; src=&#34;https://travis-ci.org/fBrx/propertySL.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Overview&lt;/h2&gt;

&lt;p&gt;The defined domain specific language - named &lt;em&gt;PropertySL&lt;/em&gt; - let&amp;rsquo;s you define properties and resource bundles in a concise way. It has support for namespaces, nesting and internationalization. The syntax is pretty straight forward to read and lets you define everything you need in one file.&lt;/p&gt;

&lt;p&gt;The project started initially as a sample project for exploring domain specific languages and the &lt;a href=&#34;http://www.eclipse.org/Xtext/&#34;&gt;Eclipse Xtext&lt;/a&gt; technology.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Example&lt;/h2&gt;

&lt;p&gt;The follwing is a basic definition of a &lt;em&gt;.psl&lt;/em&gt; file witch defines some properties.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;/**
* This is a demo package
*/
package com.github.fbrx.propertysl.demo {

    SUPPORTED_LOCALES = {
        default en, de
    }

    /** This is a simple property */
    version = &amp;quot;1.0&amp;quot;

    /** This is a complex property with NLS support */
    greeting = {
        en : &amp;quot;Welcome to the world of PropertySL!&amp;quot;
        de : &amp;quot;Willkommen in der Welt von PropertySL!&amp;quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The sample above will result in the file &lt;em&gt;com.github.fbrx.propertysl.demo.properties&lt;/em&gt; being generated with the following content:
in the following files being generated:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;com.github.fbrx.propertysl.demo.properties&lt;/em&gt; (all properties for the &lt;em&gt;default locale&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;com.github.fbrx.propertysl.demo_en.properties&lt;/em&gt; (all properties for the locale &lt;em&gt;en&lt;/em&gt; - same as default)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;com.github.fbrx.propertysl.demo_de.properties&lt;/em&gt; (all properties for the locale &lt;em&gt;de&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The file &lt;em&gt;com.github.fbrx.propertysl.demo.properties&lt;/em&gt; will contain the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;####
##  package : com.github.fbrx.propertysl.demo
##  locale  : en (default)
##
##  generated by propertySL (https://github.com/fBrx/propertySL) on 2013-12-31 @ 11:24:27
####

####
#	This is a demo package
####

com.github.fbrx.propertysl.demo.version = 1.0
com.github.fbrx.propertysl.demo.greeting = Welcome to the world of PropertySL!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Syntax&lt;/h2&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;Packages&lt;/h3&gt;

&lt;p&gt;With PropertySL properties are organized within packages. A package can contain zero or more properties of any kind. Packages can also contain other package (zero or more).&lt;/p&gt;

&lt;p&gt;For each defined package (at least) one property file will be generated. If a package contains no properties, no files will be generated for this package.&lt;/p&gt;

&lt;p&gt;When the resulting property files are generated the package names will be used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;to generate the resulting filename&lt;/li&gt;
&lt;li&gt;to namespace the containing properties&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When packages are nested, the package name of the inner package will be generated as &lt;em&gt;packageNameOfParentPackage.packageNameOfNestedPackage&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java³&#34;&gt;package com.github.fbrx.propertysl.demo {
    version = &amp;quot;1.0&amp;quot;
    package subpackage{
        version = &amp;quot;1.2&amp;quot;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above sample code will generate the following property files:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;com.github.fbrx.propertysl.demo.properties&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;com.github.fbrx.propertysl.demo.subpackage.properties&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Packages can also have additional settings configured (e.g. &lt;em&gt;SUPPORTED_LOCALES&lt;/em&gt;).&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;NLS Support (Ressource Bundles)&lt;/h3&gt;

&lt;p&gt;PropertySL has the ability to maintain properties for multiple languages (locales) in one place. This is to support the standard Java Resource Bundle layout for property files.&lt;/p&gt;

&lt;p&gt;To use the NLS-support, the locales which are to be supported by the package have to be provided as the first statement within the package:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package com.github.fbrx.propertysl.demo {
    SUPPORTED_LOCALES = {
        de, default en, en_US
    }
    //...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Locales can be defined by either language code only (i.e. &lt;code&gt;en&lt;/code&gt;) or language and country code to be more specific (i.e. &lt;code&gt;en_US&lt;/code&gt;). Multiple values are separated by comma.&lt;/p&gt;

&lt;p&gt;One of the defined locales can optionally be defined as the default locale. This results in a default ressource bundle file being generated. This file contains all the values which are defined for the respective locale. It is advised to always set the default locale.&lt;/p&gt;

&lt;p&gt;The definition above would result in the following files being generated:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/src-gen
|- com.github.fbrx.propertysl.demo.properties		# the default locale (same contents as *_en.properties)
|- com.github.fbrx.propertysl.demo_de.properties	# only properties which have a value for &#39;de&#39; set
|- com.github.fbrx.propertysl.demo_en_US.properties	# only properties which have a value for &#39;en&#39; set
|- com.github.fbrx.propertysl.demo_en_GB.properties	# only properties which have a value for &#39;en_US&#39; set
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;Properties&lt;/h3&gt;

&lt;h4 id=&#34;toc_6&#34;&gt;Simple Properties&lt;/h4&gt;

&lt;p&gt;To define a simple property the following syntax can be used:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;/** property comment */
key = &amp;quot;value&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above sample will be generated to the following entry in the resulting property file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#	property comment
key = value
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the package supports multiple locales, the value of the simple property will only be set for the default locale.&lt;/p&gt;

&lt;h4 id=&#34;toc_7&#34;&gt;Complex Properties (Multi-Language Properties)&lt;/h4&gt;

&lt;p&gt;To define a complex property which supports multiple languages the follwing syntax can be used:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;/** property comment */
key = {
    locale : &amp;quot;value&amp;quot;
    locale : &amp;quot;value&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For complex properties an entry with the according value will be generated in each supported locale specific property file.
The following rules and restrictions apply:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If additional values for unsupported locales are defined, they will be silently ignored.&lt;/li&gt;
&lt;li&gt;If definitions for a supported locale is missing, no entry will be generated in the according locale specific property file&lt;/li&gt;
&lt;li&gt;If no value is set for the default locale, an error will be generated.&lt;/li&gt;
&lt;li&gt;To use complex properties, the &lt;em&gt;SUPPORTED_LOCALES&lt;/em&gt; have to be set for the containing package&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_8&#34;&gt;Comments&lt;/h3&gt;

&lt;p&gt;To give a summary of packages contents as well as detailed explanations for single properties PropertySL supports a comprehensive comment facility.&lt;/p&gt;

&lt;p&gt;To associate a comment with a package or property just place it in front of the according element:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;/**
* Comments can describe package contents and give an overview
* of the purpose of the contained proeprties.
*
* Comments can span as many lines as needed.
*/
package com.github.fbrx.propertysl.demo {

    /** Properties can have comments too!  */
    greeting = &amp;quot;Howdy, partner!&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above comments will be rendered to the resulting property files (&lt;em&gt;com.github.fbrx.propertysl.demo.properties&lt;/em&gt; in the example) in the following way:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-properties&#34;&gt;####
#	Comments can describe package contents and give an overview
#	of the purpose of the contained proeprties.
#
#	Comments can span as many lines as needed.
####

#	Properties can have comments too!
com.github.fbrx.propertysl.demo.greeting = Howdy, partner!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Comments can also be placed at any other place in the &lt;em&gt;.psl&lt;/em&gt; file where they will be silently ignored.&lt;/p&gt;

&lt;h2 id=&#34;toc_9&#34;&gt;Editor support&lt;/h2&gt;

&lt;p&gt;The PropertySL was defined by means of the &lt;a href=&#34;http://www.eclipse.org/Xtext/&#34;&gt;Eclipse Xtext&lt;/a&gt; and &lt;a href=&#34;http://www.eclipse.org/Xtend/&#34;&gt;Eclipse Xtend&lt;/a&gt; technologies. Thus there is also first class (Eclipse based) editor support built-in.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.github.com/fBrx/propertySL/master/editor.png&#34; alt=&#34;PropertySL Editor&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;The editor supports the following features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Syntax highlighting for keywords&lt;/li&gt;
&lt;li&gt;Autocompletion for language constructs&lt;/li&gt;
&lt;li&gt;Validation of syntax and semantics&lt;/li&gt;
&lt;li&gt;Comprehensive Outline&lt;/li&gt;
&lt;li&gt;Quick Fixes for common errors and warnings&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;toc_10&#34;&gt;Attributions&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Icons for the Eclipse Outline were taken from the &lt;a href=&#34;http://ikons.piotrkwiatkowski.co.uk/&#34; title=&#34;IKONS&#34;&gt;IKONS&lt;/a&gt; package by &lt;a href=&#34;http://www.piotrkwiatkowski.co.uk/&#34;&gt;Piotr Kwiatkowski&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>